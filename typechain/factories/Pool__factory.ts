/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Pool, PoolInterface } from "../Pool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "ExchangeTokenSecured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EIP712_DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WITHDRAW_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "serverSig",
        type: "bytes",
      },
    ],
    name: "exchangeTokenSecured",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "inCaseTokenStuck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_exchanger",
        type: "address",
      },
    ],
    name: "isExchanger",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "serverSig",
        type: "bytes",
      },
    ],
    name: "isValidSignatureServer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feePercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "isValidWithdrawSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "message",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_exchanger",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_whitelisted",
        type: "bool",
      },
    ],
    name: "setExchanger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedExchanger",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115f5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638129fc1c116100ad578063a7bb580311610071578063a7bb58031461024d578063c0b4fd111461027f578063c7977be714610292578063cb4beb2c146102b9578063f2fde38b146102e557600080fd5b80638129fc1c146101f25780638456cb59146101fa5780638da5cb5b1461020257806397aba7f914610227578063a295435a1461023a57600080fd5b80633644e515116100f45780633644e515146101995780633f4ba83a146101b05780635c975abb146101b8578063715018a6146101c357806376c5d758146101cb57600080fd5b8063131e59ff146101265780631ea831ae1461014e5780631fa7c178146101715780632e72b4c214610184575b600080fd5b61013961013436600461128a565b6102f8565b60405190151581526020015b60405180910390f35b61013961015c3660046112e3565b60976020526000908152604090205460ff1681565b61013961017f366004611300565b6103ac565b61019761019236600461128a565b6104d7565b005b6101a260985481565b604051908152602001610145565b6101976106af565b60335460ff16610139565b6101976106e3565b6101a27f986aa547fe549e1e95c90174008ec6a3790e27bd37c19f40566e7ed675d4549581565b610197610717565b6101976108fd565b6065546001600160a01b03165b6040516001600160a01b039091168152602001610145565b61020f610235366004611389565b61092f565b6101976102483660046113d0565b6109ae565b61026061025b366004611412565b610b81565b6040805160ff9094168452602084019290925290820152606001610145565b61019761028d366004611455565b610bb0565b6101a27f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6101396102c73660046112e3565b6001600160a01b031660009081526097602052604090205460ff1690565b6101976102f33660046112e3565b610c74565b604051606084811b6bffffffffffffffffffffffff19908116602084015260348301859052339182901b166054830152600091829061039d90606801604051602081830303815290604052805190602001206040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b506001925050505b9392505050565b6000428310156103ed5760405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b60448201526064015b60405180910390fd5b609854604080517f986aa547fe549e1e95c90174008ec6a3790e27bd37c19f40566e7ed675d4549560208201526001600160a01b03808c169282019290925290891660608201526080810188905260a0810187905260c0810186905260e0810185905260009190610100016040516020818303038152906040528051906020012060405160200161049592919061190160f01b81526002810192909252602282015260420190565b60405160208183030381529060405280519060200120905060006104b9828561092f565b6001600160a01b03908116908a161492505050979650505050505050565b60335460ff161561051d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103e4565b6105288383836102f8565b6105745760405162461bcd60e51b815260206004820152601f60248201527f4e6f742076616c6964207369676e61747572652066726f6d207365727665720060448201526064016103e4565b6040516370a0823160e01b815230600482015282906001600160a01b038516906370a082319060240160206040518083038186803b1580156105b557600080fd5b505afa1580156105c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ed919061148e565b10156106525760405162461bcd60e51b815260206004820152602e60248201527f52657761726420706f6f6c20646f6573206e6f74206861766520656e6f75676860448201526d20746f6b656e2062616c616e636560901b60648201526084016103e4565b6106666001600160a01b0384163384610d0c565b604080516001600160a01b03851681526020810184905233917f98a0d5be8f9e97163c4527857315cfc45eda03d4c6f293facbe938d43141ea4b910160405180910390a2505050565b6065546001600160a01b031633146106d95760405162461bcd60e51b81526004016103e4906114a7565b6106e1610d5e565b565b6065546001600160a01b0316331461070d5760405162461bcd60e51b81526004016103e4906114a7565b6106e16000610df1565b600054610100900460ff166107325760005460ff1615610736565b303b155b6107995760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103e4565b600054610100900460ff161580156107bb576000805461ffff19166101011790555b6107c3610e43565b6107cb610e72565b6040805180820182526004815263141bdbdb60e21b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527f4a62f5c1187999cdd374fd40d850be57b4952a965136e01501e2ac9ed75fe27f918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a08301529060c00160408051601f1981840301815291905280516020918201206098557340d6dea19a2b9bd5e2ec5975333ea32163179ea460005260979052507f1dbf554ead44857c1365e6f1e914da6019695f8aea9005d69fb9d58d4263608d805460ff1916600117905580156108fa576000805461ff00191690555b50565b6065546001600160a01b031633146109275760405162461bcd60e51b81526004016103e4906114a7565b6106e1610ea1565b60008060008061093e85610b81565b6040805160008152602081018083528b905260ff8516918101919091526060810183905260808101829052929550909350915060019060a0016020604051602081039080840390855afa158015610999573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6065546001600160a01b031633146109d85760405162461bcd60e51b81526004016103e4906114a7565b6001600160a01b038316610a3c576040516001600160a01b038216908390600081818185875af1925050503d8060008114610a2f576040519150601f19603f3d011682016040523d82523d6000602084013e610a34565b606091505b505050505050565b6040516370a0823160e01b815230600482015282906001600160a01b038516906370a082319060240160206040518083038186803b158015610a7d57600080fd5b505afa158015610a91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab5919061148e565b1015610af85760405162461bcd60e51b81526020600482015260126024820152716e6f7420656e6f7567682062616c616e636560701b60448201526064016103e4565b60405163a9059cbb60e01b81526001600160a01b0382811660048301526024820184905284169063a9059cbb90604401602060405180830381600087803b158015610b4257600080fd5b505af1158015610b56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7a91906114dc565b505b505050565b60008060008351604114610b9457600080fd5b5050506020810151604082015160609092015160001a92909190565b6065546001600160a01b03163314610bda5760405162461bcd60e51b81526004016103e4906114a7565b6001600160a01b03821660009081526097602052604090205460ff1615158115151415610c495760405162461bcd60e51b815260206004820152601c60248201527f496e76616c69642076616c756520666f72205f65786368616e6765720000000060448201526064016103e4565b6001600160a01b03919091166000908152609760205260409020805460ff1916911515919091179055565b6065546001600160a01b03163314610c9e5760405162461bcd60e51b81526004016103e4906114a7565b6001600160a01b038116610d035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e4565b6108fa81610df1565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610b7c908490610f1c565b60335460ff16610da75760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103e4565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e6a5760405162461bcd60e51b81526004016103e4906114f9565b6106e1610fee565b600054610100900460ff16610e995760405162461bcd60e51b81526004016103e4906114f9565b6106e1611021565b60335460ff1615610ee75760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103e4565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610dd43390565b6000610f71826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110519092919063ffffffff16565b805190915015610b7c5780806020019051810190610f8f91906114dc565b610b7c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103e4565b600054610100900460ff166110155760405162461bcd60e51b81526004016103e4906114f9565b6033805460ff19169055565b600054610100900460ff166110485760405162461bcd60e51b81526004016103e4906114f9565b6106e133610df1565b60606110608484600085611068565b949350505050565b6060824710156110c95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103e4565b6001600160a01b0385163b6111205760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103e4565b600080866001600160a01b0316858760405161113c9190611570565b60006040518083038185875af1925050503d8060008114611179576040519150601f19603f3d011682016040523d82523d6000602084013e61117e565b606091505b509150915061118e828286611199565b979650505050505050565b606083156111a85750816103a5565b8251156111b85782518084602001fd5b8160405162461bcd60e51b81526004016103e4919061158c565b6001600160a01b03811681146108fa57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261120e57600080fd5b813567ffffffffffffffff80821115611229576112296111e7565b604051601f8301601f19908116603f01168101908282118183101715611251576112516111e7565b8160405283815286602085880101111561126a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561129f57600080fd5b83356112aa816111d2565b925060208401359150604084013567ffffffffffffffff8111156112cd57600080fd5b6112d9868287016111fd565b9150509250925092565b6000602082840312156112f557600080fd5b81356103a5816111d2565b600080600080600080600060e0888a03121561131b57600080fd5b8735611326816111d2565b96506020880135611336816111d2565b955060408801359450606088013593506080880135925060a0880135915060c088013567ffffffffffffffff81111561136e57600080fd5b61137a8a828b016111fd565b91505092959891949750929550565b6000806040838503121561139c57600080fd5b82359150602083013567ffffffffffffffff8111156113ba57600080fd5b6113c6858286016111fd565b9150509250929050565b6000806000606084860312156113e557600080fd5b83356113f0816111d2565b9250602084013591506040840135611407816111d2565b809150509250925092565b60006020828403121561142457600080fd5b813567ffffffffffffffff81111561143b57600080fd5b611060848285016111fd565b80151581146108fa57600080fd5b6000806040838503121561146857600080fd5b8235611473816111d2565b9150602083013561148381611447565b809150509250929050565b6000602082840312156114a057600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156114ee57600080fd5b81516103a581611447565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b8381101561155f578181015183820152602001611547565b83811115610b7a5750506000910152565b60008251611582818460208701611544565b9190910192915050565b60208152600082518060208401526115ab816040850160208701611544565b601f01601f1916919091016040019291505056fea26469706673582212204a1f6296e8a56ed4604e1c925828d0539a966a75b112dba53cc13a6c1186bd5464736f6c63430008090033";

export class Pool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Pool> {
    return super.deploy(overrides || {}) as Promise<Pool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Pool {
    return super.attach(address) as Pool;
  }
  connect(signer: Signer): Pool__factory {
    return super.connect(signer) as Pool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolInterface {
    return new utils.Interface(_abi) as PoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Pool {
    return new Contract(address, _abi, signerOrProvider) as Pool;
  }
}
