/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Sicbo, SicboInterface } from "../Sicbo";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "INO",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "predict",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "betAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "Play",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "amountBought",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxPerUser",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "configSold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRoundIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devAccAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "holderReceivedPercent",
        type: "uint256",
      },
    ],
    name: "endRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "fakeClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentTotalFeeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositRound",
        type: "uint256",
      },
    ],
    name: "getRewardBetweenTwoRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISicboNFT",
        name: "_sicboContract",
        type: "address",
      },
      {
        internalType: "contract VRFv2Consumer",
        name: "_vrfConsumer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAmountPerUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nftHolders",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositRound",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accuReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "predict",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "priceMark",
        type: "uint256",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "prices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rounds",
    outputs: [
      {
        internalType: "uint256",
        name: "holderReceiveAmountPerNft",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalFeeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    name: "setFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISicboNFT",
        name: "_sicboContract",
        type: "address",
      },
    ],
    name: "setNftContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_prices",
        type: "uint256[]",
      },
    ],
    name: "setPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sicboContract",
    outputs: [
      {
        internalType: "contract ISicboNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "soldAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "soldLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "tranferNftHolder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vrfConsumer",
    outputs: [
      {
        internalType: "contract VRFv2Consumer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a44806100206000396000f3fe6080604052600436106101da5760003560e01c80636ed0e261116101015780638da5cb5b1161009a578063c7b1d63b1161006c578063c7b1d63b146105a4578063cbc24365146105c4578063ddfd29cf146105e4578063f2fde38b146105f7578063fa1a5f591461061757005b80638da5cb5b14610526578063bc31c1c114610544578063c00007b014610564578063c3dfdae61461058457005b80637df124a1116100d35780637df124a1146104505780637fd6f15c146104a757806384493ad5146104bd5780638c65c81f146104dd57005b80636ed0e261146103d4578063715018a6146103fb57806379cf92d3146104105780637ce3489b1461043057005b8063478d1ce21161017357806352f5ad771161014557806352f5ad771461035b5780635a1e6ca11461037b5780635c975abb1461039b5780636896ef4b146103be57005b8063478d1ce2146102fa578063485cc955146103105780634e452ab1146103305780634e71d92d1461034657005b8063243adbdd116101ac578063243adbdd1461027a5780632d4a16dd1461028d5780633ad10ef6146102ba578063468e9ac6146102da57005b80630b46f069146101e35780630d39fc81146102035780631ef4d1fd1461022c57806321942c5a1461026457005b366101e157005b005b3480156101ef57600080fd5b506101e16101fe3660046115fb565b61062d565b34801561020f57600080fd5b5061021960d55481565b6040519081526020015b60405180910390f35b34801561023857600080fd5b5060d05461024c906001600160a01b031681565b6040516001600160a01b039091168152602001610223565b34801561027057600080fd5b5061021960d35481565b6101e1610288366004611627565b610643565b34801561029957600080fd5b506102196102a8366004611655565b60d76020526000908152604090205481565b3480156102c657600080fd5b5060ca5461024c906001600160a01b031681565b3480156102e657600080fd5b5060cf5461024c906001600160a01b031681565b34801561030657600080fd5b5061021960d45481565b34801561031c57600080fd5b506101e161032b366004611672565b61080e565b34801561033c57600080fd5b5061021960cb5481565b34801561035257600080fd5b506101e1610994565b34801561036757600080fd5b506101e1610376366004611655565b610ab1565b34801561038757600080fd5b506101e1610396366004611627565b610adb565b3480156103a757600080fd5b5060975460ff166040519015158152602001610223565b3480156103ca57600080fd5b5061021960cc5481565b3480156103e057600080fd5b5060cc54600090815260d16020526040902060010154610219565b34801561040757600080fd5b506101e1610c42565b34801561041c57600080fd5b506101e161042b366004611716565b610c56565b34801561043c57600080fd5b506101e161044b366004611627565b610c75565b34801561045c57600080fd5b5061048c61046b366004611655565b60d26020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610223565b3480156104b357600080fd5b5061021960cd5481565b3480156104c957600080fd5b506101e16104d8366004611672565b610c82565b3480156104e957600080fd5b506105116104f8366004611627565b60d1602052600090815260409020805460019091015482565b60408051928352602083019190915201610223565b34801561053257600080fd5b506065546001600160a01b031661024c565b34801561055057600080fd5b5061021961055f366004611627565b610e6e565b34801561057057600080fd5b5061021961057f366004611655565b610e8f565b34801561059057600080fd5b5060c95461024c906001600160a01b031681565b3480156105b057600080fd5b506102196105bf366004611627565b610efa565b3480156105d057600080fd5b506101e16105df366004611627565b610f53565b6101e16105f23660046117ac565b610f8b565b34801561060357600080fd5b506101e1610612366004611655565b611187565b34801561062357600080fd5b5061021960d65481565b610635611200565b60d39290925560d45560d555565b60d35433600090815260d760205260409020546106619083906117f3565b11156106a25760405162461bcd60e51b815260206004820152600b60248201526a1c995858da081b1a5b5a5d60aa1b60448201526064015b60405180910390fd5b60d4548160d6546106b391906117f3565b11156106f05760405162461bcd60e51b815260206004820152600c60248201526b6f7574206f662073746f636b60a01b6044820152606401610699565b61070833308360d554610703919061180b565b61125a565b60cf54604051630922dc7f60e21b8152336004820152602481018390526000916001600160a01b03169063248b71fc90604401600060405180830381600087803b15801561075557600080fd5b505af1158015610769573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610791919081019061182a565b90508160d660008282546107a591906117f3565b909155505033600090815260d76020526040812080548492906107c99084906117f3565b90915550506040517fa1b531de9f1d755e31f7f87104d6980c09d0f8e4b2ef804e1a3fd102f6ce627990610802903390859085906118b0565b60405180910390a15050565b600054610100900460ff161580801561082e5750600054600160ff909116105b806108485750303b158015610848575060005460ff166001145b6108ab5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610699565b6000805460ff1916600117905580156108ce576000805461ff0019166101001790555b6108d6611369565b6108de611396565b6108e66113bd565b6108ee6113ed565b60cf80546001600160a01b038086166001600160a01b03199283161790925560d080549285169282169290921790915560ca805490911633179055602360cd55600160cc55600260d35561037860d45566038d7ea4c6800060d555801561098f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b600260015414156109e75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610699565b60026001556109f4611420565b33600081815260d26020526040812091610a0d90610e8f565b905060008111610a4e5760405162461bcd60e51b815260206004820152600c60248201526b195b5c1d1e481c995dd85c9960a21b6044820152606401610699565b610a5930338361125a565b6000600283015560cc54610a6f9060019061190d565b600183015560405181815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a2505060018055565b610ab9611200565b60cf80546001600160a01b0319166001600160a01b0392909216919091179055565b610ae3611200565b60cd54600090610af3838261190d565b60cc54600090815260d16020526040902060010154610b12919061180b565b610b1c919061193a565b90508060cb6000828254610b3091906117f3565b909155505060cf5460408051631d5e528f60e21b815290516001926001600160a01b0316916375794a3c9160048083019260209291908290030181600087803b158015610b7c57600080fd5b505af1158015610b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb4919061194e565b610bbe919061190d565b60cc54600090815260d16020526040902060010154610bde90839061190d565b610be8919061193a565b60d16000600160cc54610bfb919061190d565b815260200190815260200160002060000154610c1791906117f3565b60cc8054600090815260d16020526040812092909255805491610c3983611967565b91905055505050565b610c4a611200565b610c546000611466565b565b610c5e611200565b8051610c719060ce90602084019061159b565b5050565b610c7d611200565b60cd55565b60cf546001600160a01b03163314610ccf5760405162461bcd60e51b815260206004820152601060248201526f1b9bdd081b999d0818dbdb9d1c9858dd60821b6044820152606401610699565b6001600160a01b03808316600081815260d260205260408082209385168252902090610d5257610d028160010154610efa565b8154610d0e919061180b565b816002016000828254610d2191906117f3565b909155505060cc54610d359060019061190d565b60018201558054816000610d4883611967565b9190505550610e68565b6001600160a01b038316610db357610d6d8260010154610efa565b8254610d79919061180b565b826002016000828254610d8c91906117f3565b909155505060cc54610da09060019061190d565b60018301558154826000610d4883611982565b610dc08260010154610efa565b8254610dcc919061180b565b826002016000828254610ddf91906117f3565b90915550506001810154610df290610efa565b8154610dfe919061180b565b816002016000828254610e1191906117f3565b909155505060cc54610e259060019061190d565b8260010181905550600160cc54610e3c919061190d565b60018201558154826000610e4f83611982565b90915550508054816000610e6283611967565b91905055505b50505050565b60ce8181548110610e7e57600080fd5b600091825260209091200154905081565b6001600160a01b038116600090815260d26020908152604080832081516060810183528154815260018201549381018490526002909101549181019190915290610ed890610efa565b8151610ee4919061180b565b8160400151610ef391906117f3565b9392505050565b600060cc54821415610f0e57506000919050565b600082815260d16020819052604082205460cc54909290610f319060019061190d565b815260200190815260200160002060000154610f4d919061190d565b92915050565b60405181815233907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a250565b60026001541415610fde5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610699565b6002600155610feb611420565b60ce54811061102c5760405162461bcd60e51b815260206004820152600d60248201526c6f7574206f662070726963657360981b6044820152606401610699565b600060ce828154811061104157611041611999565b9060005260206000200154905080341461108e5760405162461bcd60e51b815260206004820152600e60248201526d0e0c2f240dcdee840cadcdeeaced60931b6044820152606401610699565b60006110986114b8565b9050600084151582151514156110e0576103e860cd546103e86110bb919061190d565b6110c5908561180b565b6110cf919061193a565b90506110e0303361070386856117f3565b60006103e860cd54856110f3919061180b565b6110fd919061193a565b90508060d1600060cc548152602001908152602001600020600101600082825461112791906117f3565b90915550506040805187151580825260208201879052818301859052851515146060820152905133917f37b355e062af8ee62ff28622663ea9f95c7f5eac138a3c4b44d2d61678395071919081900360800190a250506001805550505050565b61118f611200565b6001600160a01b0381166111f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610699565b6111fd81611466565b50565b6065546001600160a01b03163314610c545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610699565b80836001600160a01b03163110156112ad5760405162461bcd60e51b81526020600482015260166024820152752737ba1032b737bab3b4103730ba34bb329031b7b4b760511b6044820152606401610699565b6001600160a01b038216301461098f57600080836001600160a01b03168360405160006040518083038185875af1925050503d806000811461130b576040519150601f19603f3d011682016040523d82523d6000602084013e611310565b606091505b5091509150816113625760405162461bcd60e51b815260206004820152601c60248201527f4661696c656420746f2073656e6420424e4220746f2073656c6c6572000000006044820152606401610699565b5050505050565b600054610100900460ff166113905760405162461bcd60e51b8152600401610699906119af565b60018055565b600054610100900460ff16610c545760405162461bcd60e51b8152600401610699906119af565b600054610100900460ff166113e45760405162461bcd60e51b8152600401610699906119af565b610c5433611466565b600054610100900460ff166114145760405162461bcd60e51b8152600401610699906119af565b6097805460ff19169055565b60975460ff1615610c545760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610699565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60d054604051631edd5ff960e31b8152600060048201819052916002916001600160a01b039091169063f6eaffc89060240160206040518083038186803b15801561150257600080fd5b505afa158015611516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153a919061194e565b60408051602081019290925242908201524360608201524460808201524760a0820152661899199899199960c91b60c082015260c7016040516020818303038152906040528051906020012060001c61159391906119fa565b600114905090565b8280548282559060005260206000209081019282156115d6579160200282015b828111156115d65782518255916020019190600101906115bb565b506115e29291506115e6565b5090565b5b808211156115e257600081556001016115e7565b60008060006060848603121561161057600080fd5b505081359360208301359350604090920135919050565b60006020828403121561163957600080fd5b5035919050565b6001600160a01b03811681146111fd57600080fd5b60006020828403121561166757600080fd5b8135610ef381611640565b6000806040838503121561168557600080fd5b823561169081611640565b915060208301356116a081611640565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156116ea576116ea6116ab565b604052919050565b600067ffffffffffffffff82111561170c5761170c6116ab565b5060051b60200190565b6000602080838503121561172957600080fd5b823567ffffffffffffffff81111561174057600080fd5b8301601f8101851361175157600080fd5b803561176461175f826116f2565b6116c1565b81815260059190911b8201830190838101908783111561178357600080fd5b928401925b828410156117a157833582529284019290840190611788565b979650505050505050565b600080604083850312156117bf57600080fd5b823580151581146117cf57600080fd5b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611806576118066117dd565b500190565b6000816000190483118215151615611825576118256117dd565b500290565b6000602080838503121561183d57600080fd5b825167ffffffffffffffff81111561185457600080fd5b8301601f8101851361186557600080fd5b805161187361175f826116f2565b81815260059190911b8201830190838101908783111561189257600080fd5b928401925b828410156117a157835182529284019290840190611897565b6001600160a01b038416815260208082018490526060604083018190528351908301819052600091848101916080850190845b818110156118ff578451835293830193918301916001016118e3565b509098975050505050505050565b60008282101561191f5761191f6117dd565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261194957611949611924565b500490565b60006020828403121561196057600080fd5b5051919050565b600060001982141561197b5761197b6117dd565b5060010190565b600081611991576119916117dd565b506000190190565b634e487b7160e01b600052603260045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082611a0957611a09611924565b50069056fea26469706673582212209b9ea0106c73331cec24d5088874e4d1812d044f0692004c7269ce5653e1007064736f6c63430008090033";

export class Sicbo__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Sicbo> {
    return super.deploy(overrides || {}) as Promise<Sicbo>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Sicbo {
    return super.attach(address) as Sicbo;
  }
  connect(signer: Signer): Sicbo__factory {
    return super.connect(signer) as Sicbo__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SicboInterface {
    return new utils.Interface(_abi) as SicboInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sicbo {
    return new Contract(address, _abi, signerOrProvider) as Sicbo;
  }
}
