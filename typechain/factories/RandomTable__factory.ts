/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RandomTable, RandomTableInterface } from "../RandomTable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRandomTable",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "indexes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[][]",
        name: "rates",
        type: "uint256[][]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomTable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "indexes",
        type: "uint256[]",
      },
      {
        internalType: "uint256[][]",
        name: "rates",
        type: "uint256[][]",
      },
    ],
    name: "setRandomTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108dd806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806389af894e1161005b57806389af894e146100c55780638da5cb5b146100e5578063b996086514610100578063f2fde38b1461011357600080fd5b80635704b5d714610082578063715018a61461009757806374a466281461009f575b600080fd5b6100956100903660046106af565b610126565b005b610095610225565b6100b26100ad366004610784565b61025b565b6040519081526020015b60405180910390f35b6100d86100d33660046107a6565b61028c565b6040516100bc91906107bf565b6033546040516001600160a01b0390911681526020016100bc565b61009561010e3660046106af565b6102ee565b610095610121366004610803565b610478565b6033546001600160a01b031633146101595760405162461bcd60e51b815260040161015090610833565b60405180910390fd5b60005b82518110156102205760005b82828151811061017a5761017a610868565b60200260200101515181101561020d5760005b83838151811061019f5761019f610868565b602002602001015182815181106101b8576101b8610868565b60200260200101518210156101fa57600083815260656020908152604082208054600181018255908352912001829055806101f28161087e565b91505061018d565b50816102058161087e565b925050610168565b50806102188161087e565b91505061015c565b505050565b6033546001600160a01b0316331461024f5760405162461bcd60e51b815260040161015090610833565b6102596000610513565b565b6065602052816000526040600020818154811061027757600080fd5b90600052602060002001600091509150505481565b6000818152606560209081526040918290208054835181840281018401909452808452606093928301828280156102e257602002820191906000526020600020905b8154815260200190600101908083116102ce575b50505050509050919050565b600054610100900460ff166103095760005460ff161561030d565b303b155b6103705760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610150565b600054610100900460ff16158015610392576000805461ffff19166101011790555b61039a610565565b60005b83518110156104615760005b8382815181106103bb576103bb610868565b60200260200101515181101561044e5760005b8483815181106103e0576103e0610868565b602002602001015182815181106103f9576103f9610868565b602002602001015182101561043b57600083815260656020908152604082208054600181018255908352912001829055806104338161087e565b9150506103ce565b50816104468161087e565b9250506103a9565b50806104598161087e565b91505061039d565b508015610220576000805461ff0019169055505050565b6033546001600160a01b031633146104a25760405162461bcd60e51b815260040161015090610833565b6001600160a01b0381166105075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610150565b61051081610513565b50565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166105d05760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610150565b61025933610513565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610618576106186105d9565b604052919050565b600067ffffffffffffffff82111561063a5761063a6105d9565b5060051b60200190565b600082601f83011261065557600080fd5b8135602061066a61066583610620565b6105ef565b82815260059290921b8401810191818101908684111561068957600080fd5b8286015b848110156106a4578035835291830191830161068d565b509695505050505050565b600080604083850312156106c257600080fd5b823567ffffffffffffffff808211156106da57600080fd5b6106e686838701610644565b93506020915081850135818111156106fd57600080fd5b8501601f8101871361070e57600080fd5b803561071c61066582610620565b81815260059190911b8201840190848101908983111561073b57600080fd5b8584015b83811015610773578035868111156107575760008081fd5b6107658c8983890101610644565b84525091860191860161073f565b508096505050505050509250929050565b6000806040838503121561079757600080fd5b50508035926020909101359150565b6000602082840312156107b857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156107f7578351835292840192918401916001016107db565b50909695505050505050565b60006020828403121561081557600080fd5b81356001600160a01b038116811461082c57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156108a057634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212206a6528db8401b833f5d846b96b9e9832951cdbb31ee9d966de9fbc28a5a66e1064736f6c63430008090033";

export class RandomTable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomTable> {
    return super.deploy(overrides || {}) as Promise<RandomTable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RandomTable {
    return super.attach(address) as RandomTable;
  }
  connect(signer: Signer): RandomTable__factory {
    return super.connect(signer) as RandomTable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomTableInterface {
    return new utils.Interface(_abi) as RandomTableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomTable {
    return new Contract(address, _abi, signerOrProvider) as RandomTable;
  }
}
