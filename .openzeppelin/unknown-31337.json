{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xB581C9264f59BF0289fA76D61B2D0746dCE3C30D",
    "txHash": "0x8b04d172451066111c195a810a87ba003eaadeb331fb89fba09f631869698703"
  },
  "proxies": [
    {
      "address": "0xC469e7aE4aD962c30c7111dc580B4adbc7E914DD",
      "txHash": "0xaf9f98159d53005480717752feee7b4bad17ada77591d86786a4b6a34cd5301c",
      "kind": "transparent"
    },
    {
      "address": "0xb09da8a5B236fE0295A345035287e80bb0008290",
      "txHash": "0x88c952d939ea442a5afb13941feb34d17d5f1f2b019cf249dcb7345b004f6379",
      "kind": "transparent"
    }
  ],
  "impls": {
    "611d34ff4171810f36eec54af1e66fe68a3d54af2a2bfed1dd727e819a659a48": {
      "address": "0x73511669fd4dE447feD18BB79bAFeAC93aB7F31f",
      "txHash": "0x22da7c056b29d088a7900789ffdf336332198e84e7b6b5f54dfb1d58aeba83ce",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(AddressSet)3176_storage",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:16"
          },
          {
            "label": "_minPriceAddListing",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:18"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:20"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:21"
          },
          {
            "label": "sicbo",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(Sicbo)4274",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Sicbo)4274": {
            "label": "contract Sicbo",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3176_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2875_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2875_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aa5adc7196ec564f74780fef2379552b1925a46238036ea9516fe64c8906efc3": {
      "address": "0x43ca3D2C94be00692D207C6A1e60D8B325c6f12f",
      "txHash": "0xd00df2f84ef556d309771fc056237091b4ac4cfbc52f38e85cba748743d40aae",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "gameToken",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "label": "devAccAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "label": "currentRoundIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "label": "sicboContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(ISicboNFT)4695",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "label": "vrfConsumer",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(VRFv2Consumer)4660",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_struct(Round)3502_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_struct(NftHolder)3495_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "label": "maxAmountPerUser",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "label": "soldLimit",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "label": "soldAmount",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "label": "amountBought",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISicboNFT)4695": {
            "label": "contract ISicboNFT",
            "numberOfBytes": "20"
          },
          "t_contract(VRFv2Consumer)4660": {
            "label": "contract VRFv2Consumer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(NftHolder)3495_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)3502_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(NftHolder)3495_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accuReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)3502_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
