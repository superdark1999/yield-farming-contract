{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5d60828dc3b734Ba22f3eef019b3156BA7d50156",
    "txHash": "0x3667dc02190e006d4ae0833128183edf64e43c3135c8e56cf0756d7c9a0b3f87"
  },
  "proxies": [
    {
      "address": "0x0785c130De3d2B95Ea116Ee082eFb6F0581D262B",
      "txHash": "0x8350b968c6939e39c3769861e9723dfbe956a9cecc83e809276549961161c83f",
      "kind": "transparent"
    },
    {
      "address": "0x65fe201AE4e189206D785a8319129fE3D7526a91",
      "txHash": "0xae4e526c8950503756b5e6fffbbd277c6fee5b4830872735378ea356309e20a0",
      "kind": "transparent"
    },
    {
      "address": "0x20A0d8887e47D5dE013449f3c897935D37A2b007",
      "txHash": "0x0e4fac26391559df74e4a9338037bb0bf11e1ca893faaa840c6508b538648885",
      "kind": "transparent"
    },
    {
      "address": "0xc311D55f1af422623D3B1888352846D20A868f46",
      "txHash": "0x35480572b78a19d2db521347d6a232a00a0a3c78073efa6d2e0c40d9f5be91a2",
      "kind": "transparent"
    },
    {
      "address": "0x27728151119134F9b1e480e5eac6f752fcbF126c",
      "txHash": "0x76e26def0c746c212f1671f8c9ca5f3e2d4b3a4d726732ee9c1ff6d9aa21db73",
      "kind": "transparent"
    },
    {
      "address": "0x4319F42A41fe3aB3734c5F5e11fC29bd8c213617",
      "txHash": "0x21e2ee2f756155175a9773a6bdf06a8abae0903847041d431db12454b08b0e60",
      "kind": "transparent"
    }
  ],
  "impls": {
    "64d5f9e420de8b5cddf9adf296cc54d3304c70c8ace867206dbd103225845227": {
      "address": "0x25d1CfCE1B1CCf4A42b8942167AEE84A0D49afE8",
      "txHash": "0x7e9b0a839542d619188a48fe70644b8f618766b7b744e02caa7000aad22a776a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4305",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4275",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4305": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4275": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1d11a89b736637483770feb0d2fd3440e2b9de3927d7c41bf420f792031083b7": {
      "address": "0x5730cE31716C15F6D6bC381C06052D3bfb4b8364",
      "txHash": "0x863835aa9cca40b0c26b4d0eeeee58e31d435198bdecb17666213faedf84aadf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SicboNFT",
            "label": "_admins",
            "type": "t_struct(AddressSet)3033_storage",
            "src": "contracts/SicboNFT.sol:16"
          },
          {
            "contract": "SicboNFT",
            "label": "_minPriceAddListing",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SicboNFT.sol:18"
          },
          {
            "contract": "SicboNFT",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "contracts/SicboNFT.sol:20"
          },
          {
            "contract": "SicboNFT",
            "label": "cap",
            "type": "t_uint256",
            "src": "contracts/SicboNFT.sol:21"
          },
          {
            "contract": "SicboNFT",
            "label": "sicbo",
            "type": "t_contract(Sicbo)3921",
            "src": "contracts/SicboNFT.sol:22"
          }
        ],
        "types": {
          "t_struct(AddressSet)3033_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2732_storage"
              }
            ]
          },
          "t_struct(Set)2732_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Sicbo)3921": {
            "label": "contract Sicbo"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d0364d258b4e7042a649d89fb30b45a9d6229f8a91c20c389e30689edf5da8b6": {
      "address": "0x40AB91021813b923dB715Bf71fd1b157bC926C00",
      "txHash": "0xbddf8f313db7477707fb350716852045b4c8e4fccd0439879def27816b1594fa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4318",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4288",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4318": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4288": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ec44b9240b9a8af0e60567a79c3183bdf9fd83bd3406e801bd36fa96254da545": {
      "address": "0x85066fcF5d61844f8EF1D6013E70c15337692892",
      "txHash": "0x4aacc987401345fbb1f57d55b849a146eb1d2aceff2232081b4761245d81f3fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4324",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4294",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4324": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4294": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6dd78623c4fedd020be1ed1b8efbf1a3c0b4404b2ac2d727a47bc8353273c49d": {
      "address": "0xbC746B635BDf06d7D1436b19DC90b6571C5bF4F2",
      "txHash": "0x4b7dd62a2798ab7186f520fda7e76aaed705626e43585d137a96936170a6aa64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4327",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4297",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4327": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4297": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ef0749ae23f0ae612622e2bd37b7042b496343df9e25fec941898bf120463c9": {
      "address": "0xDFd34BeDbDEFF5b25c9cA1BAca8Aab7d19D3A1Be",
      "txHash": "0xea80dfc49f3187e1c420d2dcfd13fda7dc65981983514e88bed79b7e453a0c2b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4400",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4370",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4400": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4370": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "401a72df1645c1eaa412bf34c0538f788c4c35b6545c824334e7e4420a81f972": {
      "address": "0x538dC7732F0109571A54DB5301D321382dec08CD",
      "txHash": "0x99d15fcf076ae66a47f396771519608b9344480fbaa1d15d503e9c41f5a09d81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SicboNFT",
            "label": "_admins",
            "type": "t_struct(AddressSet)3033_storage",
            "src": "contracts/SicboNFT.sol:16"
          },
          {
            "contract": "SicboNFT",
            "label": "_minPriceAddListing",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SicboNFT.sol:18"
          },
          {
            "contract": "SicboNFT",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "contracts/SicboNFT.sol:20"
          },
          {
            "contract": "SicboNFT",
            "label": "cap",
            "type": "t_uint256",
            "src": "contracts/SicboNFT.sol:21"
          },
          {
            "contract": "SicboNFT",
            "label": "sicbo",
            "type": "t_contract(Sicbo)4007",
            "src": "contracts/SicboNFT.sol:22"
          }
        ],
        "types": {
          "t_struct(AddressSet)3033_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2732_storage"
              }
            ]
          },
          "t_struct(Set)2732_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Sicbo)4007": {
            "label": "contract Sicbo"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7b299b4a4da8b304e2b47cc1d67b2d4b6ae30e0a2903b7cfcb2d6e8c2a9bd3a8": {
      "address": "0x82DdED4FA673415Cfcd5e086d2Ad9fC138D568Cf",
      "txHash": "0x393bc856a2f2d9039ce175c70107943aeac8de4d2d6a2b553b6b01f368d1da9d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4419",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4389",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4419": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4389": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0e36a94944860c5bb59aebc064030e5f9bd030f5dc5f6791d29d78ba80dacb7f": {
      "address": "0x047857b0a749498ee5581C9DA566Ef1679F1cCd4",
      "txHash": "0xaceff97b8163d81ebe00fc5bd37ca630265d98fc43869796627bfb2112aef7c8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4423",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4393",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4423": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4393": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2d3cb3f11e6ef414aa6a10e0f04d681b7b249f864cf04225a38626531511daee": {
      "address": "0xF7d6bCE93F321EfA382B6A3B9364B9CF0d2e2097",
      "txHash": "0x3b9f0c57c2394462d1fb5e22cebb79c4f45ace81c3a3a3617eff1799bcc7a150",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4451",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4421",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4451": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4421": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "68973941d1fdf60534297134b8c1caf497c32ce6c8756fe6aa4329298add028b": {
      "address": "0xcDcBFe83f41ef8D6780342b531cFc46f2863806d",
      "txHash": "0xb33651f7a670a224b88ca230372aedd4e15bd8b10cb3bca3d32e2b4700e89029",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4458",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4428",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4458": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4428": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0479d7a68f71c27db24c168bfb8a2afe83da0acf5fbb58097c515942dc457c57": {
      "address": "0xD1d093d6a3B2191536439B6Fb0568Fb520d5c56f",
      "txHash": "0xa18fddc21906c8f9f91577148611f5a17f2a6331bc04022263c9e256cf9d6665",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "holderSharedPercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4470",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4440",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3357_storage)",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4470": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4440": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3357_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3357_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "totalHolderReceivedAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "21ebef9cbf8d4e5bbd978bc166b9c10758b762002be24326207f650acd3c49fe": {
      "address": "0xE3f620a30ee57Bb69C797d2DDEC02af27208977c",
      "txHash": "0xb339af9c5744f7b2665a57700f8fb45c1d03d4c58784d74dade8e2d3ce008593",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SicboNFT",
            "label": "_admins",
            "type": "t_struct(AddressSet)3033_storage",
            "src": "contracts/SicboNFT.sol:16"
          },
          {
            "contract": "SicboNFT",
            "label": "_minPriceAddListing",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/SicboNFT.sol:18"
          },
          {
            "contract": "SicboNFT",
            "label": "nextTokenId",
            "type": "t_uint256",
            "src": "contracts/SicboNFT.sol:20"
          },
          {
            "contract": "SicboNFT",
            "label": "cap",
            "type": "t_uint256",
            "src": "contracts/SicboNFT.sol:21"
          },
          {
            "contract": "SicboNFT",
            "label": "sicbo",
            "type": "t_contract(Sicbo)4101",
            "src": "contracts/SicboNFT.sol:22"
          }
        ],
        "types": {
          "t_struct(AddressSet)3033_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2732_storage"
              }
            ]
          },
          "t_struct(Set)2732_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(Sicbo)4101": {
            "label": "contract Sicbo"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b938609f8c734dbce6a9fd4beadc72b77dd227cd2d4af1b4284467076e4fb62e": {
      "address": "0x539Db828813E0Fd867D4e0495419B076ba1C7b14",
      "txHash": "0x1110c711333b6b12fa1ff80dac7cd46216b74e3a21092a5f090f307867572769",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "devAccAmount",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "contract": "Sicbo",
            "label": "feePercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4522",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4487",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3359_storage)",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4522": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4487": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3359_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3359_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6aaa081b189403556350eb5726152179b3c9bbca48ceec26fc924e4959477e25": {
      "address": "0xd8F4fb53f758FEBE3396CD3F4d519b6Fc94aF423",
      "txHash": "0x74de7d8af9f9237a0d7df762cb228cb38b3c97685bfcb11c8a597b37dbd78e39",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "devAccAmount",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "contract": "Sicbo",
            "label": "feePercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4425",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4390",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3359_storage)",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4425": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4390": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3359_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3359_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a52475363c7bddf1b418c4af903ee86e42dbfed7f6ec7acf8918c77ffb8bdddc": {
      "address": "0x2C249f55dbDdaeddd37DB562801090dd05F8b478",
      "txHash": "0x48bf0dd652742727be08c23a188c4b8ef81d94094603e899aafef21d525c9352",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "devAccAmount",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "contract": "Sicbo",
            "label": "feePercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4543",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4508",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3359_storage)",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "contract": "Sicbo",
            "label": "maxAmountPerUser",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "contract": "Sicbo",
            "label": "soldLimit",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "contract": "Sicbo",
            "label": "nftPrice",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "contract": "Sicbo",
            "label": "soldAmount",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "contract": "Sicbo",
            "label": "amountBought",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4543": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4508": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3359_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3359_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d2adfecf3b302179b60e04a8346ebb5d0d8b2b8018e01f230692c37c94a8448b": {
      "address": "0x724BcD105cF66AB5826853825Ba78FCfbFc38E30",
      "txHash": "0x44829baceeb2f0c2ace0fa77a9e67296d8982a7587dafbfdfeedc109efe6f984",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "Sicbo",
            "label": "gameToken",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "contract": "Sicbo",
            "label": "devAddress",
            "type": "t_address",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "contract": "Sicbo",
            "label": "devAccAmount",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "contract": "Sicbo",
            "label": "currentRoundIndex",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "contract": "Sicbo",
            "label": "feePercent",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "contract": "Sicbo",
            "label": "prices",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "contract": "Sicbo",
            "label": "sicboContract",
            "type": "t_contract(ISicboNFT)4543",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "contract": "Sicbo",
            "label": "vrfConsumer",
            "type": "t_contract(VRFv2Consumer)4508",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "contract": "Sicbo",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3359_storage)",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "contract": "Sicbo",
            "label": "nftHolders",
            "type": "t_mapping(t_address,t_struct(NftHolder)3352_storage)",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "contract": "Sicbo",
            "label": "maxAmountPerUser",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "contract": "Sicbo",
            "label": "soldLimit",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "contract": "Sicbo",
            "label": "nftPrice",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "contract": "Sicbo",
            "label": "soldAmount",
            "type": "t_uint256",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "contract": "Sicbo",
            "label": "amountBought",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(ISicboNFT)4543": {
            "label": "contract ISicboNFT"
          },
          "t_contract(VRFv2Consumer)4508": {
            "label": "contract VRFv2Consumer"
          },
          "t_mapping(t_uint256,t_struct(Round)3359_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)"
          },
          "t_struct(Round)3359_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(NftHolder)3352_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)"
          },
          "t_struct(NftHolder)3352_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "depositRound",
                "type": "t_uint256"
              },
              {
                "label": "accuReward",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8ec8239e89bba2aa275f29de859cf3dff7a8883fd80de120e64816a45b043f53": {
      "address": "0xa8367Bb7496E31Df53D8c0eCD4aeA0eD2c0A11c5",
      "txHash": "0xc7b05a5f5cba3f84c6ba211a47dbbacf39ac8f3540bffd0e2ce1ce721ee7e1e0",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "gameToken",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "label": "devAccAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "label": "currentRoundIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "label": "sicboContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(ISicboNFT)4790",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "label": "vrfConsumer",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(VRFv2Consumer)4660",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_struct(Round)3502_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_struct(NftHolder)3495_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "label": "maxAmountPerUser",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "label": "soldLimit",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "label": "soldAmount",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "label": "amountBought",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISicboNFT)4790": {
            "label": "contract ISicboNFT",
            "numberOfBytes": "20"
          },
          "t_contract(VRFv2Consumer)4660": {
            "label": "contract VRFv2Consumer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(NftHolder)3495_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)3502_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(NftHolder)3495_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accuReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)3502_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "912ab6704b619a94a46588c77a64eeee6fa5e8e2485347f5a6b19324872c2b6c": {
      "address": "0x0206A340C1541A834781Dd61434868e6DC1DDa0a",
      "txHash": "0x9f6f771afb6de4bf53af72d93d36389d89945227f3f179ff134f70813b101fb6",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "gameToken",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "label": "devAccAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "label": "currentRoundIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "label": "sicboContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(ISicboNFT)4693",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "label": "vrfConsumer",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(VRFv2Consumer)4658",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_struct(Round)3502_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_struct(NftHolder)3495_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "label": "maxAmountPerUser",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "label": "soldLimit",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "label": "soldAmount",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "label": "amountBought",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISicboNFT)4693": {
            "label": "contract ISicboNFT",
            "numberOfBytes": "20"
          },
          "t_contract(VRFv2Consumer)4658": {
            "label": "contract VRFv2Consumer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(NftHolder)3495_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)3502_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(NftHolder)3495_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accuReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)3502_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "aa5adc7196ec564f74780fef2379552b1925a46238036ea9516fe64c8906efc3": {
      "address": "0x95DB2f71453e13148880B059D66cAE706Dd7fE3C",
      "txHash": "0xfb2bfee511da643197bee20c50ee5e300d2b9a4a8a73418f2402812110df75f1",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "gameToken",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "label": "devAccAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "label": "currentRoundIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "label": "sicboContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(ISicboNFT)4695",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "label": "vrfConsumer",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(VRFv2Consumer)4660",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_struct(Round)3502_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_struct(NftHolder)3495_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "label": "maxAmountPerUser",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "label": "soldLimit",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "label": "soldAmount",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "label": "amountBought",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISicboNFT)4695": {
            "label": "contract ISicboNFT",
            "numberOfBytes": "20"
          },
          "t_contract(VRFv2Consumer)4660": {
            "label": "contract VRFv2Consumer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(NftHolder)3495_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)3502_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(NftHolder)3495_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accuReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)3502_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "05322650c6285eb2e752eb12ada0f426bb325ff6af0c7546a2fd1e11ddc83f5e": {
      "address": "0x5d4E1255AE2665a6ebEB0804793F160Df1f66400",
      "txHash": "0x829f8cd4176620c2a13e614aecf4929194cb792614f3e7b97fabb102b5374790",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "gameToken",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "label": "devAccAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "label": "currentRoundIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "label": "sicboContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(ISicboNFT)4798",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "label": "vrfConsumer",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(VRFv2Consumer)4668",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_struct(Round)3502_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_struct(NftHolder)3495_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "label": "maxAmountPerUser",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "label": "soldLimit",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "label": "soldAmount",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "label": "amountBought",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISicboNFT)4798": {
            "label": "contract ISicboNFT",
            "numberOfBytes": "20"
          },
          "t_contract(VRFv2Consumer)4668": {
            "label": "contract VRFv2Consumer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(NftHolder)3495_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)3502_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(NftHolder)3495_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accuReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)3502_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6c3fa22c7ac038a68440a943909b23023f9f8237f34eaf474c45c56d8e266655": {
      "address": "0x019C758C10298EAD1C19AaCee54d4ce543AF45C5",
      "txHash": "0x776d6d3836ecc4664ad09b4c2fb69ad5af408fa58f758f82c7d220af5acb21d2",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "gameToken",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "label": "devAccAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "label": "currentRoundIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "label": "sicboContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(ISicboNFT)4703",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "label": "vrfConsumer",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(VRFv2Consumer)4668",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_struct(Round)3502_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_struct(NftHolder)3495_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "label": "maxAmountPerUser",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "label": "soldLimit",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "label": "soldAmount",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "label": "amountBought",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISicboNFT)4703": {
            "label": "contract ISicboNFT",
            "numberOfBytes": "20"
          },
          "t_contract(VRFv2Consumer)4668": {
            "label": "contract VRFv2Consumer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(NftHolder)3495_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)3502_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(NftHolder)3495_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accuReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)3502_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b66de47550ac3d8736548f907143cbf3f3e6d17cdfae2eccfc8db6262c71dc03": {
      "address": "0xC8aF17cb61bc61Dc6487D7E5a7B48069F5a4bAE4",
      "txHash": "0x6de62ec8a46783e4a99db344cff37950d471681020ebb825c61118b9d597d750",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "gameToken",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "label": "devAccAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "label": "currentRoundIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "label": "sicboContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(ISicboNFT)4714",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "label": "vrfConsumer",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(VRFv2Consumer)4679",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_struct(Round)3502_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_struct(NftHolder)3495_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "label": "maxAmountPerUser",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "label": "soldLimit",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "label": "soldAmount",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "label": "amountBought",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISicboNFT)4714": {
            "label": "contract ISicboNFT",
            "numberOfBytes": "20"
          },
          "t_contract(VRFv2Consumer)4679": {
            "label": "contract VRFv2Consumer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(NftHolder)3495_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)3502_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(NftHolder)3495_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accuReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)3502_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1d881992f52800c31472498306e9d4663ba730da6bfeeb3c079ec1b35b2bc0ed": {
      "address": "0x9A417580006C4709a654793488751f1D8053F405",
      "txHash": "0x7bf09e2fb51448de241d342948c5478472f8e348f717a4ff49fb3c8c25300425",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "gameToken",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "label": "devAccAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:39"
          },
          {
            "label": "currentRoundIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:43"
          },
          {
            "label": "sicboContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(ISicboNFT)4719",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "label": "vrfConsumer",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(VRFv2Consumer)4684",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:46"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_struct(Round)3502_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_struct(NftHolder)3495_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:49"
          },
          {
            "label": "maxAmountPerUser",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "label": "soldLimit",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "label": "soldAmount",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:63"
          },
          {
            "label": "amountBought",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISicboNFT)4719": {
            "label": "contract ISicboNFT",
            "numberOfBytes": "20"
          },
          "t_contract(VRFv2Consumer)4684": {
            "label": "contract VRFv2Consumer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(NftHolder)3495_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)3502_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(NftHolder)3495_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accuReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)3502_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d524eec5350e9089755ade57d29d425bbdf45dc9dcf8c8541a856eb3648a9b29": {
      "address": "0x6de4590B74d337ee690219E559Cca55884b8d65d",
      "txHash": "0x10f795c5beebf2feccb19deb1cc1f419b900589706d2b078bb289e9bca81c60c",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_admins",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(AddressSet)3176_storage",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:16"
          },
          {
            "label": "_minPriceAddListing",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:18"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:20"
          },
          {
            "label": "cap",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:21"
          },
          {
            "label": "sicbo",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(Sicbo)4296",
            "contract": "SicboNFT",
            "src": "contracts/SicboNFT.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(Sicbo)4296": {
            "label": "contract Sicbo",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3176_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2875_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2875_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "45f43388ceee8f3e6aa424cf2a467d6afdcf65da87a3cc8d09046b6b2ab6fa46": {
      "address": "0x998E73E7219644fAC7da4C578af4b65Ef41E021E",
      "txHash": "0x1688313dccd222706022330f01bc79fa19b3307a1ccb21df93de3aebf1e31365",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "gameToken",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:36"
          },
          {
            "label": "devAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:37"
          },
          {
            "label": "devAccAmount",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:38"
          },
          {
            "label": "currentRoundIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:40"
          },
          {
            "label": "feePercent",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:41"
          },
          {
            "label": "prices",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:42"
          },
          {
            "label": "sicboContract",
            "offset": 0,
            "slot": "207",
            "type": "t_contract(ISicboNFT)4733",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:44"
          },
          {
            "label": "vrfConsumer",
            "offset": 0,
            "slot": "208",
            "type": "t_contract(VRFv2Consumer)4698",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:45"
          },
          {
            "label": "rounds",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_struct(Round)3500_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:47"
          },
          {
            "label": "nftHolders",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_struct(NftHolder)3495_storage)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:48"
          },
          {
            "label": "maxAmountPerUser",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:59"
          },
          {
            "label": "soldLimit",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:60"
          },
          {
            "label": "nftPrice",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:61"
          },
          {
            "label": "soldAmount",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:62"
          },
          {
            "label": "amountBought",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Sicbo",
            "src": "contracts/Sicbo.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISicboNFT)4733": {
            "label": "contract ISicboNFT",
            "numberOfBytes": "20"
          },
          "t_contract(VRFv2Consumer)4698": {
            "label": "contract VRFv2Consumer",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(NftHolder)3495_storage)": {
            "label": "mapping(address => struct Sicbo.NftHolder)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)3500_storage)": {
            "label": "mapping(uint256 => struct Sicbo.Round)",
            "numberOfBytes": "32"
          },
          "t_struct(NftHolder)3495_storage": {
            "label": "struct Sicbo.NftHolder",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "depositRound",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accuReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Round)3500_storage": {
            "label": "struct Sicbo.Round",
            "members": [
              {
                "label": "holderReceiveAmountPerNft",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalFeeAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
